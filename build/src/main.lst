   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.startup,"ax",@progbits
  12               	.global	main
  14               	main:
  15               	.LFB12:
  16               		.file 1 "src/main.c"
   1:src/main.c    **** #include <avr/io.h>
   2:src/main.c    **** #include <util/delay.h>
   3:src/main.c    **** #include <stdbool.h>
   4:src/main.c    **** #include "Config.h"
   5:src/main.c    **** #include "Pin.h"
   6:src/main.c    **** #include "BinarySensor.h"
   7:src/main.c    **** #include "CanBus.h"
   8:src/main.c    **** #include "Uart.h"
   9:src/main.c    **** #include "AX12.h"
  10:src/main.c    **** 
  11:src/main.c    **** 
  12:src/main.c    **** int main() {
  17               		.loc 1 12 0
  18               		.cfi_startproc
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27 0004 CDB7      		in r28,__SP_L__
  28 0006 DEB7      		in r29,__SP_H__
  29               	.LCFI2:
  30               		.cfi_def_cfa_register 28
  31 0008 2E97      		sbiw r28,14
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 18
  34 000a 0FB6      		in __tmp_reg__,__SREG__
  35 000c F894      		cli
  36 000e DEBF      		out __SP_H__,r29
  37 0010 0FBE      		out __SREG__,__tmp_reg__
  38 0012 CDBF      		out __SP_L__,r28
  39               	/* prologue: function */
  40               	/* frame size = 14 */
  41               	/* stack size = 16 */
  42               	.L__stack_usage = 16
  13:src/main.c    **** 
  14:src/main.c    **** 
  15:src/main.c    **** #ifdef DEBUG
  16:src/main.c    **** 	char uart_char1, uart_char2;
  17:src/main.c    **** 
  18:src/main.c    **** 	/* UART0 for DEBUG Initialisation */
  19:src/main.c    **** 	USART0_init(57600);
  20:src/main.c    **** #endif
  21:src/main.c    **** 
  22:src/main.c    **** 	sei();
  43               		.loc 1 22 0
  44               	/* #APP */
  45               	 ;  22 "src/main.c" 1
  46 0014 7894      		sei
  47               	 ;  0 "" 2
  23:src/main.c    **** 
  24:src/main.c    **** 	/*	AX12 Servos Initialisation	*/
  25:src/main.c    **** 	AX12_InitAll();
  48               		.loc 1 25 0
  49               	/* #NOAPP */
  50 0016 0E94 0000 		call AX12_InitAll
  51               	.LVL0:
  26:src/main.c    **** 
  27:src/main.c    **** 	/*	Binary Sensors Initalisation	*/
  28:src/main.c    **** 	BinarySensor_Add(&Pin_C6, 1);
  52               		.loc 1 28 0
  53 001a 61E0      		ldi r22,lo8(1)
  54 001c 80E0      		ldi r24,lo8(Pin_C6)
  55 001e 90E0      		ldi r25,hi8(Pin_C6)
  56 0020 0E94 0000 		call BinarySensor_Add
  57               	.LVL1:
  29:src/main.c    **** 	BinarySensor_Add(&Pin_C7, 2);
  58               		.loc 1 29 0
  59 0024 62E0      		ldi r22,lo8(2)
  60 0026 80E0      		ldi r24,lo8(Pin_C7)
  61 0028 90E0      		ldi r25,hi8(Pin_C7)
  62 002a 0E94 0000 		call BinarySensor_Add
  63               	.LVL2:
  30:src/main.c    **** 	BinarySensor_Add(&Pin_A7, 3);
  64               		.loc 1 30 0
  65 002e 63E0      		ldi r22,lo8(3)
  66 0030 80E0      		ldi r24,lo8(Pin_A7)
  67 0032 90E0      		ldi r25,hi8(Pin_A7)
  68 0034 0E94 0000 		call BinarySensor_Add
  69               	.LVL3:
  31:src/main.c    **** 	BinarySensor_Add(&Pin_A6, 4);
  70               		.loc 1 31 0
  71 0038 64E0      		ldi r22,lo8(4)
  72 003a 80E0      		ldi r24,lo8(Pin_A6)
  73 003c 90E0      		ldi r25,hi8(Pin_A6)
  74 003e 0E94 0000 		call BinarySensor_Add
  75               	.LVL4:
  32:src/main.c    **** 
  33:src/main.c    **** 	/* Brushless EDF Initialisation on pin */
  34:src/main.c    **** 	//Brushless_Init(&Pin_B5);
  35:src/main.c    **** 
  36:src/main.c    **** 
  37:src/main.c    **** 	/* CANbus Initialisation */
  38:src/main.c    **** 	CANbus_Init();
  76               		.loc 1 38 0
  77 0042 0E94 0000 		call CANbus_Init
  78               	.LVL5:
  79               	.L3:
  39:src/main.c    **** 
  40:src/main.c    **** #ifdef DEBUG
  41:src/main.c    **** 	/* ALL Initialisations Passed and UART sends 	'k' */
  42:src/main.c    **** 	USART0_transmit('k');
  43:src/main.c    **** #endif
  44:src/main.c    **** 
  45:src/main.c    ****   while(1) {
  46:src/main.c    **** 
  47:src/main.c    **** 		BinarySensor_UpdateAll();
  80               		.loc 1 47 0
  81 0046 0E94 0000 		call BinarySensor_UpdateAll
  82               	.LVL6:
  48:src/main.c    **** 
  49:src/main.c    **** 		if (can_check_message()) {
  83               		.loc 1 49 0
  84 004a 0E94 0000 		call can_check_message
  85               	.LVL7:
  86 004e 8823      		tst r24
  87 0050 01F0      		breq .L3
  88               	.LBB2:
  50:src/main.c    **** 			can_t msg;
  51:src/main.c    **** 
  52:src/main.c    **** 			if (can_get_message(&msg)) {
  89               		.loc 1 52 0
  90 0052 CE01      		movw r24,r28
  91 0054 0196      		adiw r24,1
  92 0056 0E94 0000 		call can_get_message
  93               	.LVL8:
  94 005a 8823      		tst r24
  95 005c 01F0      		breq .L3
  53:src/main.c    **** 
  54:src/main.c    **** 				if(AX12_OnMessage(&msg) == true) continue;
  96               		.loc 1 54 0
  97 005e CE01      		movw r24,r28
  98 0060 0196      		adiw r24,1
  99 0062 0E94 0000 		call AX12_OnMessage
 100               	.LVL9:
 101 0066 00C0      		rjmp .L3
 102               	.LBE2:
 103               		.cfi_endproc
 104               	.LFE12:
 106               		.text
 107               	.Letext0:
 108               		.file 2 "/usr/lib/avr/include/stdint.h"
 109               		.file 3 "src/Pin.h"
 110               		.file 4 "./libs/can/can.h"
 111               		.file 5 "src/AX12.h"
 112               		.file 6 "src/CanBus.h"
 113               		.file 7 "src/BinarySensor.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHTcTIW.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccHTcTIW.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccHTcTIW.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccHTcTIW.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccHTcTIW.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccHTcTIW.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccHTcTIW.s:14     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
AX12_InitAll
Pin_C6
BinarySensor_Add
Pin_C7
Pin_A7
Pin_A6
CANbus_Init
BinarySensor_UpdateAll
can_check_message
can_get_message
AX12_OnMessage
